/**
 * 
 */
package com.lic.epgs.gratuity.quotation.member.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import com.lic.epgs.gratuity.quotation.member.entity.MemberBulkErrorEntity;

/**
 * @author Ismail Khan A
 *
 */

public interface MemberErrorRepository extends JpaRepository<MemberBulkErrorEntity, Long> {

	List<MemberBulkErrorEntity> findAllByBatchId(Long batchId);
	
	@Modifying
	@Query(value = "DELETE FROM MemberBulkErrorEntity mbs WHERE mbs.batchId=:batchId")
	void deleteByBatchId(Long batchId);
	
	@Modifying
	@Query(value = "INSERT INTO QSTG_MEMBER_BATCH_ERROR (MEMBER_BATCH_ERROR_ID, MEMBER_BULK_STG_ID, MEMBER_BATCH_ID, ERROR, IS_ACTIVE, CREATED_BY, CREATED_DATE) "
			+ " SELECT QSTG_MEMBER_BATCH_ERR_ID_SEQ.nextval MEMBER_BATCH_ERROR_ID, MEMBER_BULK_STG_ID, MEMBER_BATCH_ID, ERROR, IS_ACTIVE, CREATED_BY, CREATED_DATE "
			+ " FROM ("
			+ " SELECT MEMBER_BULK_STG_ID, MEMBER_BATCH_ID, "
			+ "	COALESCE(NVL2(CATEGORY, '', 'CATEGORY should not be Empty, '), NVL2(CATEGORY_ID, '', 'Invalid CATEGORY, ')) || "
			+ "	COALESCE(NVL2(GENDER, '', 'GENDER should not be Empty, '), NVL2(GENDER_ID, '', 'Invalid GENDER, ')) || "
			+ "	CASE NVL2(COALESCE(ADDRESS1_ADDRESS_TYPE, ADDRESS1_COUNTRY, ADDRESS1_STATE,	ADDRESS1_DISTRICT, ADDRESS1_CITY, ADDRESS1_CONTACT_NUMBER, "
			+ "		ADDRESS1_ADDRESS1, ADDRESS1_ADDRESS2, ADDRESS1_ADDRESS3), 1, "
			+ "			NVL2(ADDRESS1_PIN_CODE, 2, 0)) "
			+ "	WHEN 0 THEN ''"
			+ "	ELSE "
			+ "		NVL2(ADDRESS1_ADDRESS_TYPE_ID, "
			+ "			NVL2(ADDRESS1_COUNTRY_ID, "
			+ "				NVL2(ADDRESS1_STATE_ID, '', 'Invalid Address1 State, '), "
			+ "			'Invalid Address1 Country'), "
			+ "		'Invalid Address1 Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(ADDRESS2_ADDRESS_TYPE, ADDRESS2_COUNTRY, ADDRESS2_STATE,	ADDRESS2_DISTRICT, ADDRESS2_CITY, ADDRESS2_CONTACT_NUMBER, "
			+ "		ADDRESS2_ADDRESS1, ADDRESS2_ADDRESS2, ADDRESS2_ADDRESS3), 1, "
			+ "			NVL2(ADDRESS2_PIN_CODE, 2, 0)) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(ADDRESS2_ADDRESS_TYPE_ID, "
			+ "			NVL2(ADDRESS2_COUNTRY_ID, "
			+ "				NVL2(ADDRESS2_STATE_ID, '', 'Invalid Address2 State, '), "
			+ "			'Invalid Address2 Country, '), "
			+ "		'Invalid Address2 Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(ADDRESS3_ADDRESS_TYPE, ADDRESS3_COUNTRY, ADDRESS3_STATE, ADDRESS3_DISTRICT, ADDRESS3_CITY, ADDRESS3_CONTACT_NUMBER, "
			+ "		ADDRESS3_ADDRESS1, ADDRESS3_ADDRESS2, ADDRESS3_ADDRESS3), 1, "
			+ "			NVL2(ADDRESS3_PIN_CODE, 2, 0)) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(ADDRESS3_ADDRESS_TYPE_ID, "
			+ "			NVL2(ADDRESS3_COUNTRY_ID, "
			+ "				NVL2(ADDRESS3_STATE_ID, '', 'Invalid Address3 State, '), "
			+ "			'Invalid Address3 Country, '), "
			+ "		'Invalid Address3 Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(BANK1_BANK_ACCOUNT_NUMBER, BANK1_ACCOUNT_TYPE, BANK1_IFCS_CODE, BANK1_BANK_NAME, BANK1_BANK_BRANCH), 1, 0) "
			+ "	WHEN 0 THEN ''"
			+ "	ELSE "
			+ "		NVL2(BANK1_ACCOUNT_TYPE_ID, "
			+ "			NVL2(BANK1_BANK_NAME_ID, "
			+ "				NVL2(BANK1_BANK_BRANCH_ID, '', 'Invalid Bank1 Branch, '), "
			+ "			'Invalid Bank1 Name, '), "
			+ "		'Invalid Bank1 Account Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(BANK2_BANK_ACCOUNT_NUMBER, BANK2_ACCOUNT_TYPE, BANK2_IFCS_CODE, BANK2_BANK_NAME, BANK2_BANK_BRANCH), 1, 0) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(BANK2_ACCOUNT_TYPE_ID, "
			+ "			NVL2(BANK2_BANK_NAME_ID, "
			+ "				NVL2(BANK2_BANK_BRANCH_ID, '', 'Invalid Bank2 Branch, '), "
			+ "			'Invalid Bank2 Name, '), "
			+ "		'Invalid Bank2 Account Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(BANK3_BANK_ACCOUNT_NUMBER, BANK3_ACCOUNT_TYPE, BANK3_IFCS_CODE, BANK3_BANK_NAME, BANK3_BANK_BRANCH), 1, 0) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(BANK3_ACCOUNT_TYPE_ID, "
			+ "			NVL2(BANK3_BANK_NAME_ID, "
			+ "				NVL2(BANK3_BANK_BRANCH_ID, '', 'Invalid Bank3 Branch, '), "
			+ "			'Invalid Bank3 Name, '), "
			+ "		'Invalid Bank3 Account Type, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(NOMINEE1_CODE, NOMINEE1_NAME, NOMINEE1_RELATION_SHIP, NOMINEE1_PAN_NUMBER, NOMINEE1_BANK_ACCOUNT_NUMBER, "
			+ "		NOMINEE1_BANK_ACCOUNT_TYPE, NOMINEE1_IFCS_CODE, NOMINEE1_BANK_NAME,	NOMINEE1_BANK_BRANCH), 1, "
			+ "			NVL2(NOMINEE1_CONTACT_NUMBER, 2, "
			+ "				NVL2(NOMINEE1_AADHAR_NUMBER, 3, "
			+ "					NVL2(NOMINEE1_PERCENTAGE, 4, "
			+ "						NVL2(NOMINEE1_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(NOMINEE1_RELATION_SHIP_ID, "
			+ "			NVL2(NOMINEE1_BANK_ACCOUNT_TYPE_ID, "
			+ "				NVL2(NOMINEE1_BANK_NAME_ID, "
			+ "					NVL2(NOMINEE1_BANK_BRANCH_ID, '', 'Invalid Nominee1 Bank Branch, '), "
			+ "				'Invalid Nominee1 Bank Name, '), "
			+ "			'Invalid Nominee1 Account Type, '), "
			+ "		'Invalid Nominee1 Relationship, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(NOMINEE2_CODE, NOMINEE2_NAME, NOMINEE2_RELATION_SHIP, NOMINEE2_PAN_NUMBER, NOMINEE2_BANK_ACCOUNT_NUMBER, "
			+ "		NOMINEE2_BANK_ACCOUNT_TYPE, NOMINEE2_IFCS_CODE, NOMINEE2_BANK_NAME, NOMINEE2_BANK_BRANCH), 1, "
			+ "			NVL2(NOMINEE2_CONTACT_NUMBER, 2, "
			+ "				NVL2(NOMINEE2_AADHAR_NUMBER, 3, "
			+ "					NVL2(NOMINEE2_PERCENTAGE, 4, "
			+ "						NVL2(NOMINEE2_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(NOMINEE2_RELATION_SHIP_ID, "
			+ "			NVL2(NOMINEE2_BANK_ACCOUNT_TYPE_ID, "
			+ "				NVL2(NOMINEE2_BANK_NAME_ID, "
			+ "					NVL2(NOMINEE2_BANK_BRANCH_ID, '', 'Invalid Nominee2 Bank Branch, '), "
			+ "				'Invalid Nominee2 Bank Name, '), "
			+ "			'Invalid Nominee2 Account Type, '), "
			+ "		'Invalid Nominee2 Relationship, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(NOMINEE3_CODE, NOMINEE3_NAME, NOMINEE3_RELATION_SHIP, NOMINEE3_PAN_NUMBER, NOMINEE3_BANK_ACCOUNT_NUMBER, "
			+ "		NOMINEE3_BANK_ACCOUNT_TYPE, NOMINEE3_IFCS_CODE, NOMINEE3_BANK_NAME, NOMINEE3_BANK_BRANCH), 1, "
			+ "			NVL2(NOMINEE3_CONTACT_NUMBER, 2, "
			+ "				NVL2(NOMINEE3_AADHAR_NUMBER, 3, "
			+ "					NVL2(NOMINEE3_PERCENTAGE, 4, "
			+ "						NVL2(NOMINEE3_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(NOMINEE3_RELATION_SHIP_ID, "
			+ "			NVL2(NOMINEE3_BANK_ACCOUNT_TYPE_ID, "
			+ "				NVL2(NOMINEE3_BANK_NAME_ID, "
			+ "					NVL2(NOMINEE3_BANK_BRANCH_ID, '', 'Invalid Nominee3 Bank Branch, '), "
			+ "				'Invalid Nominee3 Bank Name, '), "
			+ "			'Invalid Nominee3 Account Type, '), "
			+ "		'Invalid Nominee3 Relationship, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(APPOINTEE1_MEMBER_NOMINEE, APPOINTEE1_CODE, APPOINTEE1_NAME, APPOINTEE1_RELATION_SHIP, APPOINTEE1_PAN_NUMBER, "
			+ "		APPOINTEE1_BANK_ACCOUNT_NUMBER, APPOINTEE1_ACCOUNT_TYPE, APPOINTEE1_IFCS_CODE, APPOINTEE1_BANK_BRANCH), 1, "
			+ "			NVL2(APPOINTEE1_CONTACT_NUMBER, 2, "
			+ "				NVL2(APPOINTEE1_AADHAR_NUMBER, 3, "
			+ "					NVL2(APPOINTEE1_PERCENTAGE, 4, "
			+ "						NVL2(APPOINTEE1_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(APPOINTEE1_RELATION_SHIP_ID, "
			+ "			NVL2(APPOINTEE1_ACCOUNT_TYPE_ID, "
			+ "				NVL2(APPOINTEE1_BANK_NAME_ID, "
			+ "					NVL2(APPOINTEE1_BANK_BRANCH_ID, '', 'Invalid Appointee1 Bank Branch'), "
			+ "				'Invalid Appointee1 Bank Name, '), "
			+ "			'Invalid Appointee1 Account Type, '), "
			+ "		'Invalid Appointee1 Relationship, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(APPOINTEE2_MEMBER_NOMINEE, APPOINTEE2_CODE, APPOINTEE2_NAME, APPOINTEE2_RELATION_SHIP, APPOINTEE2_PAN_NUMBER, "
			+ "		APPOINTEE2_BANK_ACCOUNT_NUMBER, APPOINTEE2_ACCOUNT_TYPE, APPOINTEE2_IFCS_CODE, APPOINTEE2_BANK_BRANCH), 1, "
			+ "			NVL2(APPOINTEE2_CONTACT_NUMBER, 2, "
			+ "				NVL2(APPOINTEE2_AADHAR_NUMBER, 3, "
			+ "					NVL2(APPOINTEE2_PERCENTAGE, 4, "
			+ "						NVL2(APPOINTEE2_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(APPOINTEE2_RELATION_SHIP_ID, "
			+ "			NVL2(APPOINTEE2_ACCOUNT_TYPE_ID, "
			+ "				NVL2(APPOINTEE2_BANK_NAME_ID, "
			+ "					NVL2(APPOINTEE2_BANK_BRANCH_ID, '', 'Invalid Appointee2 Bank Branch'), "
			+ "				'Invalid Appointee2 Bank Name, '), "
			+ "			'Invalid Appointee2 Account Type, '), "
			+ "		'Invalid Appointee2 Relationship, ') "
			+ "	END || "
			+ "	CASE NVL2(COALESCE(APPOINTEE3_MEMBER_NOMINEE, APPOINTEE3_CODE, APPOINTEE3_NAME, APPOINTEE3_RELATION_SHIP, APPOINTEE3_PAN_NUMBER, "
			+ "		APPOINTEE3_BANK_ACCOUNT_NUMBER, APPOINTEE3_ACCOUNT_TYPE, APPOINTEE3_IFCS_CODE, APPOINTEE3_BANK_BRANCH), 1, "
			+ "			NVL2(APPOINTEE3_CONTACT_NUMBER, 2, "
			+ "				NVL2(APPOINTEE3_AADHAR_NUMBER, 3, "
			+ "					NVL2(APPOINTEE3_PERCENTAGE, 4, "
			+ "						NVL2(APPOINTEE3_DATE_OF_BIRTH, 5, 0))))) "
			+ "	WHEN 0 THEN '' "
			+ "	ELSE "
			+ "		NVL2(APPOINTEE3_RELATION_SHIP_ID, "
			+ "			NVL2(APPOINTEE3_ACCOUNT_TYPE_ID, "
			+ "				NVL2(APPOINTEE3_BANK_NAME_ID, "
			+ "					NVL2(APPOINTEE3_BANK_BRANCH_ID, '', 'Invalid Appointee3 Bank Branch'), "
			+ "				'Invalid Appointee3 Bank Name, '), "
			+ "			'Invalid Appointee3 Account Type, '), "
			+ "		'Invalid Appointee3 Relationship, ') "
			+ "	END || "
			+ "	CASE ERROR_CODE "
			+ "		WHEN 'AGE' THEN 'Invalid Age, '"
			+ "		WHEN 'DUP' THEN 'Duplicate Member, '"
			+ "		WHEN 'PER' THEN 'Invalid Percentage Distribution, '"
			+ "		WHEN 'PNV' THEN 'Proposal Number is Not Valid, '"
			+ "		WHEN 'RAS' THEN 'Invalid Retirement Age, '"
			+ "		ELSE '' "
			+ "	END AS ERROR, 1 IS_ACTIVE, ?2 CREATED_BY, CURRENT_TIMESTAMP CREATED_DATE  "
			+ " FROM QSTG_MEMBER_BULK_STG qmbs "
			+ " WHERE RECORD_STATUS ='B' AND MEMBER_BATCH_ID = ?1)", nativeQuery = true)
	void bulkInsertSecondLevelErrors(Long memberBatchId, String createdBy);
	
	@Modifying
	@Query(value = "DELETE FROM QSTG_MEMBER_BATCH_ERROR WHERE MEMBER_BATCH_ID IN (SELECT BATCH_FILE_ID FROM QSTG_MEMBER_BATCH "
			+ "WHERE QUOTATION_ID IN (SELECT QUOTATION_ID FROM QSTG_QUOTATION WHERE PROPOSAL_NUMBER=?1))", nativeQuery = true)
	void deleteByProposalNumber(String proposalNumber);
}
